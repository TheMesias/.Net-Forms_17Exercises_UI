<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAP2SURBVHhe7ZjJTxNRHMdxOUihdFokREPCFkAEBFovYiKJJ6PevBn+GC6KC9CScPJivBkSFxAj
        RBFNTCRqjBCF2A6LwZRuUDTgCjz7yiMCjmXaWXi/N79P8r1Q2pn5fCaFTBaCIAiCIAiCIAiSHi5v4ITT
        Jz91eicHnV1yLfsxYgZSZ6A5IX7J6ZUJneST37KXEKORfP5TW+TTdcrL7GXESBLCTyb2dZt8DGAGKeRj
        AKPZQT4GMBIV8um+sV9H9ESlfDoMoDdpyCdSBwbQFVeX3JSGfOLAAPqRgXy67+ztiBYylI8B9ECDfAyg
        FY3yMYAWmPwvGuQTR3vgB/s4JB2Sj5S1y8cAmaCjfAyQLjrLJ3kYQD0GyKf7yT4eSYVB8jGAGgyUT/Ku
        Y4CUOLpkT0L6gkHyMUAqTJBP94sdDtmMSfIxgBImyscA23F4A24T5RM7BvjLuvzAvInyif1a4Dc7vLXZ
        JfkYgLKL8jHALsu3dgAO5NOtsNOxFlJHoJED+XTWC8CRfGK/6rdWAM7kk1wrBeBQPt0qOz2x4VS+NQKs
        y5djHMoXP4Dk9TdwLF/sAADkk9wr/jV2umIBRL6YAQDJFy8AMPkkR6QAAOUnx04fNlDlCxEAsvycNuAB
        pI6pesjyQQdg8qOQ5YMNIIr8ZABC9rDLgoFI8m3QAogm33b5I5wAIsoHE8DpmzomovxkgFayl10mn4gs
        n/sAosvnOoAV5NNxGSDf6692+uQ50eXbLiUC9JB97LL5wErys3kLkN8+fcRK8rkKYEX53ASwqvxkgNbh
        /UzD7gBdvqt7klQ9C5OalzG2qOLqXsdI3Zv5f1Zyc/oAU2E+Itz5NSMx4plYzHhFPbPZTIe5JOV75SBk
        +XTuD3FFsWp3+EHQxpSYR8XD0PmqofCyyzcJ/jsfXAAqv35sYZUevHIoBP4PrtYAhYOhHKbGeCr6585t
        yN9Y8d3PYOXT/2zABKgaiJypH53fIp+OXkDBjRmQ8sEEULrzN+/oiyhI+XoEKOiJ5DJNxlD5KHI2lfyN
        Hbr1CZx8PQIc7I3amSr9+d/XjtKqn0fAyec6QPLOH935zt+YezxO8runQMmn4zIAvfMb38VXlA6YakW3
        Z0HJp892tAYoe7zgYNr0Yf1rR/2dv3mVT8Kg5NOHaY3vtQUouReXmDp9qHsVW1I6kJrVjsRAyecyQEOG
        dz9d41gclPz1AMrXomaJ965lDRN9H0dXDYX6lA6mauOLoORrCeBOXGv5wNwdpk1fyvvDTaX9wZZM5uic
        PO5olz0ZrU322DRvIq2V3Q9eLO2dbVFa2UDwQnFf6HRJ31zz9hX2zJQyXQiCIAiCIAiCIAiCIHySlfUH
        LFFhvxlpbxIAAAAASUVORK5CYII=
</value>
  </data>
</root>